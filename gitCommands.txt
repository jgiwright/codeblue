git init                    # Initialize a new repository
git clone <url>            # Clone a remote repository
git remote add origin <url> # Add remote repository
git remote -v              # View remote repositories

git status                 # Check repository status
git add <file>             # Stage specific file
git add .                  # Stage all changes
git add -A                 # Stage all changes including deletions
git commit -m "message"    # Commit with message
git commit -am "message"   # Stage and commit tracked files

git branch                 # List branches
git branch <name>          # Create new branch
git checkout <branch>      # Switch to branch
git checkout -b <branch>   # Create and switch to branch
git switch <branch>        # Switch to branch (newer syntax)
git switch -c <branch>     # Create and switch to branch (newer)
git merge <branch>         # Merge branch into current
git branch -d <branch>     # Delete branch

git push                   # Push to remote
git push origin <branch>   # Push specific branch
git push -u origin <branch> # Push and set upstream
git pull                   # Fetch and merge from remote
git fetch                  # Fetch changes without merging
git push --force           # Force push (use carefully)

git log                    # View commit history
git log --oneline          # Compact log view
git log --graph            # Visual branch graph
git show <commit>          # Show commit details
git diff                   # Show unstaged changes
git diff --staged          # Show staged changes
git blame <file>           # Show who changed each line

git reset <file>           # Unstage file
git reset --hard           # Reset to last commit (dangerous)
git reset --soft HEAD~1    # Undo last commit, keep changes staged
git reset --hard HEAD~1    # Undo last commit, discard changes
git revert <commit>        # Create commit that undoes another commit
git checkout -- <file>     # Discard changes to file
git clean -fd              # Remove untracked files and directories

git config --global user.name "Name"     # Set global username
git config --global user.email "email"   # Set global email
git config --list                        # View all config
git config --global init.defaultBranch main # Set default branch name

git rebase <branch>        # Rebase current branch onto another
git cherry-pick <commit>   # Apply specific commit to current branch
git tag <name>             # Create tag
git tag -a <name> -m "msg" # Create annotated tag
git grep <pattern>         # Search for pattern in tracked files
